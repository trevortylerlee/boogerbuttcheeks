---
const buildTime = new Date().toISOString();
const currentYear = new Date().getFullYear();
---

<hr class="prose mx-auto max-w-none opacity-50 dark:prose-invert" />
<footer class="flex items-center justify-end py-8">
  <div>
    <div
      class="text-xs text-lightModeForegroundMuted dark:text-darkModeForegroundMuted"
    >
      © 2007 – {currentYear} Trevor Tyler Lee
    </div>
    <div id="build-time" data-time={buildTime} class="flex justify-end">
      <a
        href="https://github.com/trevortylerlee/boogerbuttcheeks/commits/main"
        class="no-underline"
      >
        <span
          id="last-updated"
          class="text-xs text-lightModeForegroundMuted dark:text-darkModeForegroundMuted"
          >Updated</span
        >
      </a>
    </div>
  </div>
</footer>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    console.log("loaded");
    const buildTimeString = document.getElementById("build-time").dataset.time;
    const buildTime = new Date(buildTimeString);

    if (!isNaN(buildTime.getTime())) {
      const now = new Date();
      const timeAgoText = timeAgo(buildTime, now);
      document.getElementById("last-updated").textContent =
        `Updated ${timeAgoText}`;
    }
  });

  function timeAgo(datePast, dateNow) {
    const seconds = Math.floor((dateNow - datePast) / 1000);
    let interval = Math.floor(seconds / 31536000);

    console.log(interval);

    if (interval >= 1) {
      return interval + " year" + (interval === 1 ? "" : "s") + " ago";
    }
    interval = Math.floor(seconds / 2592000);
    if (interval >= 1) {
      return interval + " month" + (interval === 1 ? "" : "s") + " ago";
    }
    interval = Math.floor(seconds / 86400);
    if (interval >= 1) {
      return interval + " day" + (interval === 1 ? "" : "s") + " ago";
    }
    interval = Math.floor(seconds / 3600);
    if (interval >= 1) {
      return interval + " hour" + (interval === 1 ? "" : "s") + " ago";
    }
    interval = Math.floor(seconds / 60);
    if (interval >= 1) {
      return interval + " minute" + (interval === 1 ? "" : "s") + " ago";
    }
    return (
      Math.floor(seconds) + " second" + (seconds === 1 ? "" : "s") + " ago"
    );
  }
</script>
