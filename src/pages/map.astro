<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Konva Canvas Scrolling Drag Demo</title>
    <style>
      body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        background-color: #000;
      }
    </style>
  </head>

  <body>
    <div id="container"></div>
    <script>
      import Konva from "konva";

      var width = window.innerWidth;
      var height = window.innerHeight;

      var stage = new Konva.Stage({
        container: "container",
        width: width,
        height: height,
        draggable: true,
      });

      var scaleBy = 1.1;
      stage.on("wheel", (e) => {
        // stop default scrolling
        e.evt.preventDefault();

        var oldScale = stage.scaleX();
        var pointer = stage.getPointerPosition();

        // Initialize mousePointTo to avoid "used before being assigned" error
        var mousePointTo = { x: 0, y: 0 };

        if (pointer) {
          mousePointTo = {
            x: (pointer.x - stage.x()) / oldScale,
            y: (pointer.y - stage.y()) / oldScale,
          };
        }

        // how to scale? Zoom in? Or zoom out?
        let direction = e.evt.deltaY > 0 ? -1 : 1;

        // when we zoom on trackpad, e.evt.ctrlKey is true
        // in that case lets revert direction
        if (e.evt.ctrlKey) {
          direction = -direction;
        }

        var newScale = direction > 0 ? oldScale * scaleBy : oldScale / scaleBy;

        stage.scale({ x: newScale, y: newScale });

        if (pointer) {
          var newPos = {
            x: pointer.x - mousePointTo.x * newScale,
            y: pointer.y - mousePointTo.y * newScale,
          };
          stage.position(newPos);
        }
      });

      var layer = new Konva.Layer();
      stage.add(layer);

      var WIDTH = width;
      var HEIGHT = height;
      var NUMBER = 200;

      function generateNode() {
        return new Konva.Circle({
          x: WIDTH * Math.random(),
          y: HEIGHT * Math.random(),
          radius: 50,
          fill: "red",
          stroke: "black",
        });
      }

      for (var i = 0; i < NUMBER; i++) {
        layer.add(generateNode());
      }
    </script>
  </body>
</html>
